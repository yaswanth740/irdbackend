// <auto-generated />
using System;
using BackendAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackendAPI.Migrations
{
    [DbContext(typeof(LobContext))]
    partial class LobContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackendAPI.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("client_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("BackendAPI.Models.Distribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachment_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datetime_approved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dmethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Epic_agencycode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ccemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmapproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("cmreview_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("current_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("epic_lookup_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("installeddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("invoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("sendcm_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("toemail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Distributions");
                });

            modelBuilder.Entity("BackendAPI.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageSrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("footer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subject_line")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("BackendAPI.Models.Glob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Globs");
                });

            modelBuilder.Entity("BackendAPI.Models.HomeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedWith")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("HomeModels");
                });

            modelBuilder.Entity("BackendAPI.Models.LobCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LobCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedWith")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LobCategories");
                });

            modelBuilder.Entity("BackendAPI.Models.client_inv_del", b =>
                {
                    b.Property<int>("inv_deliveryId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("inv_deliveryId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("client_Inv_Dels");
                });

            modelBuilder.Entity("BackendAPI.Models.inv_delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("agency_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("glob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instr_level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("s_id")
                        .HasColumnType("int");

                    b.Property<string>("updated_by")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_on")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("inv_Deliveries");
                });

            modelBuilder.Entity("BackendAPI.Models.policyline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("PC")
                        .HasColumnType("bit");

                    b.Property<string>("app_details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("pol_code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("policylines");
                });

            modelBuilder.Entity("BackendAPI.Models.client_inv_del", b =>
                {
                    b.HasOne("BackendAPI.Models.Client", "Client")
                        .WithMany("client_inv_del")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendAPI.Models.inv_delivery", "inv_delivery")
                        .WithMany("client_inv_del")
                        .HasForeignKey("inv_deliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("inv_delivery");
                });

            modelBuilder.Entity("BackendAPI.Models.Client", b =>
                {
                    b.Navigation("client_inv_del");
                });

            modelBuilder.Entity("BackendAPI.Models.inv_delivery", b =>
                {
                    b.Navigation("client_inv_del");
                });
#pragma warning restore 612, 618
        }
    }
}
